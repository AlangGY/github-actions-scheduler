on:
  push:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * *"

jobs:
  day-reducer:
    runs-on: ubuntu-latest
    steps:
      - name: query pullRequests
        id: query_pull_requests
        run: |
          pullRequests="$(gh api graphql -F owner=AlangGY -F name=github-actions-scheduler -f query='
              query($name: String!, $owner: String!) {
                repository(owner: $owner, name: $name) {
                  pullRequests(last:100) {  nodes { number, title, labels(last: 20) { nodes { name } }  } }
                }
              }
            ' --jq '.data.repository.pullRequests.nodes')"
          echo ::set-output name=pull_requests::$pullRequests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: change pullRequest's D-day
        run: |
          for pr in $(echo ${{ steps.query_pull_requests.outputs.pull_requests }} | jq -r '.[] | @base64'); do
            _jq() {
              echo ${pr} | base64 --decode | jq -r ${1}
            }

            number=$(_jq '.number')
            title=$(_jq '.title')
            labels=$(_jq '.labels.nodes')

            for label in $(echo $labels | jq -r '.[] | @base64'); do
              _jq() {
                  echo ${label} | base64 --decode | jq -r ${1}
              }

              label=$(_jq '.name')
              if [[ $label =~ ["^D."] ]]; then
                echo "id: $number, title: $title, label: $label"

                  if [[ $label == "D-0" ]]; then
                    nextLabel="expired"
                  else
                    nextLabel="D"-$((${label:2} - 1))
                  fi

                echo 'target pr number:' $number
                echo 'target pr title:' $title
                echo $label '->' $nextLabel
                $(gh pr edit $number --remove-label $label --add-label $nextLabel)
              fi
            done
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
