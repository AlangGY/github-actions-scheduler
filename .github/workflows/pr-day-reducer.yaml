name: PR D-Day Scheduler
on:
  schedule:
    - cron: "0 15 * * *"

jobs:
  day-reducer:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: query pullRequests
        id: query_pull_requests
        run: |
          pullRequests="$(gh api graphql -F owner=$GITHUB_REPOSITORY_OWNER -F name=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2) -f query='
            query($name: String!, $owner: String!) {
              repository(owner: $owner, name: $name) {
                pullRequests(last:100, states: OPEN) {  nodes { number , labels(last: 20) { nodes { name } }  } }
              }
            }
          ' --jq '[(.data.repository.pullRequests.nodes.[] | "@", .number , .labels.nodes[].name)] | join("_")')"
          echo "pull_requests=$pullRequests" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: change pullRequest's D-day
        run: |
          IFS=$'\n' # Set the input field separator to newline to preserve labels with spaces
          for pr in $(echo "${{ steps.query_pull_requests.outputs.pull_requests }}" | sed 's/_@_/\n/g' | sed 's/@_/\n/g'); do
            prNumber=$(echo "$pr" | cut -d'_' -f1)
            prLabels=$(echo "$pr" | cut -d'_' -f2-)
            echo "check" "$prNumber"
            for label in $(echo "$prLabels" | sed 's/_/\n/g'); do
              if [[ $label =~ ^D- ]]; then
                if [[ $label == "D-0" ]]; then
                  nextLabel="expired"
                else
                  nextLabel="D-$(( ${label:2} - 1 ))"
                fi
                echo "change prNumber:" "$prNumber"' label from' "$label"' to' "$nextLabel"
                echo "$(gh pr edit "$prNumber" --remove-label "$label" --add-label "$nextLabel" --repo "$GITHUB_REPOSITORY")"
              fi
            done
            sleep 0.5
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
